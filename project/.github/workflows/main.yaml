name: Release todo-project

on:
    push:

env:
    PROJECT_ID: ${{ secrets.PROJECT_ID }}
    GKE_CLUSTER: dwk-cluster
    GKE_ZONE: europe-north1-b
    IMAGE_APP: todo-app
    IMAGE_BACKEND: todo-backend
    SERVICE: todo-project
    BRANCH: ${{ github.ref_name }}

jobs:
    build-publish-deploy:
        name: Build, Publish and Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: google-github-actions/auth@v2
              with:
                  credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

            - name: "Set up Cloud SDK"
              uses: google-github-actions/setup-gcloud@v2

            - name: "Use gcloud CLI"
              run: gcloud info
            - run: gcloud --quiet auth configure-docker
            - name: "Get GKE credentials"
              uses: "google-github-actions/get-gke-credentials@v2"
              with:
                  cluster_name: "${{ env.GKE_CLUSTER }}"
                  project_id: "${{ env.PROJECT_ID }}"
                  location: "${{ env.GKE_ZONE }}"

            - name: Build todo-app
              run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA" ./todo-app/.
            - name: Publish todo-app
              run: docker push "gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA"

            - name: Build todo-backend
              run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA" ./todo-backend/.
            - name: Publish todo-backend
              run: docker push "gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA"

            - name: Set up Kustomize
              uses: imranismail/setup-kustomize@v2.1
            - name: Deploy
              run: |-
                  kustomize edit set image TODO-APP/IMAGE=gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA
                  kustomize edit set image TODO-BACKEND/IMAGE=gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA
                  kustomize build . | kubectl apply -f -
                  kubectl rollout status deployment $SERVICE
                  kubectl get services -o wide
