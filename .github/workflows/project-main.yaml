name: Release todo-project

on:
    push:
        paths:
            - "project/**"

    workflow_dispatch:

env:
    PROJECT_ID: ${{ secrets.PROJECT_ID }}
    GKA_SA_KEY: ${{ secrets.GOOGLE_CREDENTIALS }}
    GKE_CLUSTER: dwk-cluster
    GKE_ZONE: europe-north1-b
    IMAGE_APP: todo-app
    APP_DEPLOYMENT: todo-app-dep
    IMAGE_BACKEND: todo-backend
    BACKEND_DEPLOYMENT: todo-backend-dep
    BRANCH: ${{ github.ref_name }}

jobs:
    build-publish-deploy:
        name: Build, Publish and Deploy
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./project

        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: google-github-actions/auth@v2
              with:
                  credentials_json: "${{ env.GKA_SA_KEY }}"

            - name: "Set up Cloud SDK"
              uses: google-github-actions/setup-gcloud@v2

            - name: "Use gcloud CLI"
              run: gcloud info
            - run: gcloud --quiet auth configure-docker
            - name: "Get GKE credentials"
              uses: "google-github-actions/get-gke-credentials@v2"
              with:
                  cluster_name: "${{ env.GKE_CLUSTER }}"
                  project_id: "${{ env.PROJECT_ID }}"
                  location: "${{ env.GKE_ZONE }}"

            - name: Build todo-app
              run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA" todo-app/.
            - name: Publish todo-app
              run: docker push "gcr.io/$PROJECT_ID/$IMAGE_APP:$BRANCH-$GITHUB_SHA"

            - name: Build todo-backend
              run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA" todo-backend/.
            - name: Publish todo-backend
              run: docker push "gcr.io/$PROJECT_ID/$IMAGE_BACKEND:$BRANCH-$GITHUB_SHA"

            - name: Install sops
              run: |-
                  curl -LO https://github.com/getsops/sops/releases/download/v3.9.0/sops-v3.9.0.linux.amd64
                  mv sops-v3.9.0.linux.amd64 /usr/local/bin/sops
                  chmod +x /usr/local/bin/sops

            - name: Decrypt secret.enc.yaml
              run: |-
                  export SOPS_AGE_KEY_FILE=${{ secrets.SOPS_AGE_KEY_FILE }}
                  sops --decrypt ./manifests/secret.enc.yaml > ./manifests/secret.yaml

            - name: Set up Kustomize
              uses: imranismail/setup-kustomize@v2.1.0
            - name: Deploy
              run: |-
                  kubectl create namespace ${GITHUB_REF#refs/heads/} || true
                  kubectl config set-context --current --namespace=${GITHUB_REF#refs/heads/}
                  kustomize edit set namespace ${GITHUB_REF#refs/heads/}
                  kustomize edit set image TODO-APP/IMAGE=gcr.io/$PROJECT_ID/$IMAGE_APP:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
                  kustomize edit set image TODO-BACKEND/IMAGE=gcr.io/$PROJECT_ID/$IMAGE_BACKEND:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
                  kustomize build . | kubectl apply -f -
                  kubectl rollout status deployment/$APP_DEPLOYMENT
                  kubectl rollout status deployment/$BACKEND_DEPLOYMENT
                  kubectl get services -o wide
